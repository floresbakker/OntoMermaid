@prefix ns1: <https://mermaid.org/ontomermaid/model/def/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

sh:AbstractResult a rdfs:Class ;
    rdfs:label "Abstract result"@en ;
    rdfs:comment "The base class of validation results, typically not instantiated directly."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#AbstractResult((sh:AbstractResult)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:ConstraintComponent a rdfs:Class ;
    rdfs:label "Constraint component"@en ;
    rdfs:comment "The class of constraint components."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Parameterizable ;
    ns1:label """http://www.w3.org/ns/shacl#ConstraintComponent((sh:ConstraintComponent)) -- subClassOf --> http://www.w3.org/ns/shacl#Parameterizable((sh:Parameterizable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:Function a rdfs:Class ;
    rdfs:label "Function"@en ;
    rdfs:comment "The class of SHACL functions."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Parameterizable ;
    ns1:label """http://www.w3.org/ns/shacl#Function((sh:Function)) -- subClassOf --> http://www.w3.org/ns/shacl#Parameterizable((sh:Parameterizable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:JSConstraint a rdfs:Class ;
    rdfs:label "JavaScript-based constraint"@en ;
    rdfs:comment "The class of constraints backed by a JavaScript function."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:JSExecutable ;
    ns1:label """http://www.w3.org/ns/shacl#JSConstraint((sh:JSConstraint)) -- subClassOf --> http://www.w3.org/ns/shacl#JSExecutable((sh:JSExecutable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:JSExecutable a rdfs:Class ;
    rdfs:label "JavaScript executable"@en ;
    rdfs:comment "Abstract base class of resources that declare an executable JavaScript."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#JSExecutable((sh:JSExecutable)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:JSFunction a rdfs:Class ;
    rdfs:label "JavaScript function"@en ;
    rdfs:comment "The class of SHACL functions that execute a JavaScript function when called."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Function,
        sh:JSExecutable ;
    ns1:label """http://www.w3.org/ns/shacl#JSFunction((sh:JSFunction)) -- subClassOf --> http://www.w3.org/ns/shacl#Function((sh:Function))
""",
        """http://www.w3.org/ns/shacl#JSFunction((sh:JSFunction)) -- subClassOf --> http://www.w3.org/ns/shacl#JSExecutable((sh:JSExecutable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:JSLibrary a rdfs:Class ;
    rdfs:label "JavaScript library"@en ;
    rdfs:comment "Represents a JavaScript library, typically identified by one or more URLs of files to include."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#JSLibrary((sh:JSLibrary)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:JSRule a rdfs:Class ;
    rdfs:label "JavaScript rule"@en ;
    rdfs:comment "The class of SHACL rules expressed using JavaScript."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:JSExecutable,
        sh:Rule ;
    ns1:label """http://www.w3.org/ns/shacl#JSRule((sh:JSRule)) -- subClassOf --> http://www.w3.org/ns/shacl#JSExecutable((sh:JSExecutable))
""",
        """http://www.w3.org/ns/shacl#JSRule((sh:JSRule)) -- subClassOf --> http://www.w3.org/ns/shacl#Rule((sh:Rule))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:JSTarget a rdfs:Class ;
    rdfs:label "JavaScript target"@en ;
    rdfs:comment "The class of targets that are based on JavaScript functions."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:JSExecutable,
        sh:Target ;
    ns1:label """http://www.w3.org/ns/shacl#JSTarget((sh:JSTarget)) -- subClassOf --> http://www.w3.org/ns/shacl#JSExecutable((sh:JSExecutable))
""",
        """http://www.w3.org/ns/shacl#JSTarget((sh:JSTarget)) -- subClassOf --> http://www.w3.org/ns/shacl#Target((sh:Target))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:JSTargetType a rdfs:Class ;
    rdfs:label "JavaScript target type"@en ;
    rdfs:comment "The (meta) class for parameterizable targets that are based on JavaScript functions."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:JSExecutable,
        sh:TargetType ;
    ns1:label """http://www.w3.org/ns/shacl#JSTargetType((sh:JSTargetType)) -- subClassOf --> http://www.w3.org/ns/shacl#JSExecutable((sh:JSExecutable))
""",
        """http://www.w3.org/ns/shacl#JSTargetType((sh:JSTargetType)) -- subClassOf --> http://www.w3.org/ns/shacl#TargetType((sh:TargetType))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:JSValidator a rdfs:Class ;
    rdfs:label "JavaScript validator"@en ;
    rdfs:comment "A SHACL validator based on JavaScript. This can be used to declare SHACL constraint components that perform JavaScript-based validation when used."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:JSExecutable,
        sh:Validator ;
    ns1:label """http://www.w3.org/ns/shacl#JSValidator((sh:JSValidator)) -- subClassOf --> http://www.w3.org/ns/shacl#JSExecutable((sh:JSExecutable))
""",
        """http://www.w3.org/ns/shacl#JSValidator((sh:JSValidator)) -- subClassOf --> http://www.w3.org/ns/shacl#Validator((sh:Validator))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:NodeKind a rdfs:Class ;
    rdfs:label "Node kind"@en ;
    rdfs:comment "The class of all node kinds, including sh:BlankNode, sh:IRI, sh:Literal or the combinations of these: sh:BlankNodeOrIRI, sh:BlankNodeOrLiteral, sh:IRIOrLiteral."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#NodeKind((sh:NodeKind)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:NodeShape a rdfs:Class ;
    rdfs:label "Node shape"@en ;
    rdfs:comment "A node shape is a shape that specifies constraint that need to be met with respect to focus nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Shape ;
    ns1:label """http://www.w3.org/ns/shacl#NodeShape((sh:NodeShape)) -- subClassOf --> http://www.w3.org/ns/shacl#Shape((sh:Shape))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:Parameter a rdfs:Class ;
    rdfs:label "Parameter"@en ;
    rdfs:comment "The class of parameter declarations, consisting of a path predicate and (possibly) information about allowed value type, cardinality and other characteristics."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:PropertyShape ;
    ns1:label """http://www.w3.org/ns/shacl#Parameter((sh:Parameter)) -- subClassOf --> http://www.w3.org/ns/shacl#PropertyShape((sh:PropertyShape))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:Parameterizable a rdfs:Class ;
    rdfs:label "Parameterizable"@en ;
    rdfs:comment "Superclass of components that can take parameters, especially functions and constraint components."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#Parameterizable((sh:Parameterizable)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:PrefixDeclaration a rdfs:Class ;
    rdfs:label "Prefix declaration"@en ;
    rdfs:comment "The class of prefix declarations, consisting of pairs of a prefix with a namespace."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#PrefixDeclaration((sh:PrefixDeclaration)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:PropertyGroup a rdfs:Class ;
    rdfs:label "Property group"@en ;
    rdfs:comment "Instances of this class represent groups of property shapes that belong together."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#PropertyGroup((sh:PropertyGroup)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:PropertyShape a rdfs:Class ;
    rdfs:label "Property shape"@en ;
    rdfs:comment "A property shape is a shape that specifies constraints on the values of a focus node for a given property or path."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Shape ;
    ns1:label """http://www.w3.org/ns/shacl#PropertyShape((sh:PropertyShape)) -- subClassOf --> http://www.w3.org/ns/shacl#Shape((sh:Shape))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:ResultAnnotation a rdfs:Class ;
    rdfs:label "Result annotation"@en ;
    rdfs:comment "A class of result annotations, which define the rules to derive the values of a given annotation property as extra values for a validation result."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#ResultAnnotation((sh:ResultAnnotation)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:Rule a rdfs:Class ;
    rdfs:label "Rule"@en ;
    rdfs:comment "The class of SHACL rules. Never instantiated directly."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#Rule((sh:Rule)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLAskExecutable a rdfs:Class ;
    rdfs:label "SPARQL ASK executable"@en ;
    rdfs:comment "The class of SPARQL executables that are based on an ASK query."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLExecutable ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLAskExecutable((sh:SPARQLAskExecutable)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLExecutable((sh:SPARQLExecutable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLAskValidator a rdfs:Class ;
    rdfs:label "SPARQL ASK validator"@en ;
    rdfs:comment "The class of validators based on SPARQL ASK queries. The queries are evaluated for each value node and are supposed to return true if the given node conforms."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLAskExecutable,
        sh:Validator ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLAskValidator((sh:SPARQLAskValidator)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLAskExecutable((sh:SPARQLAskExecutable))
""",
        """http://www.w3.org/ns/shacl#SPARQLAskValidator((sh:SPARQLAskValidator)) -- subClassOf --> http://www.w3.org/ns/shacl#Validator((sh:Validator))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLConstraint a rdfs:Class ;
    rdfs:label "SPARQL constraint"@en ;
    rdfs:comment "The class of constraints based on SPARQL SELECT queries."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLSelectExecutable ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLConstraint((sh:SPARQLConstraint)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLSelectExecutable((sh:SPARQLSelectExecutable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLConstructExecutable a rdfs:Class ;
    rdfs:label "SPARQL CONSTRUCT executable"@en ;
    rdfs:comment "The class of SPARQL executables that are based on a CONSTRUCT query."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLExecutable ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLConstructExecutable((sh:SPARQLConstructExecutable)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLExecutable((sh:SPARQLExecutable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLExecutable a rdfs:Class ;
    rdfs:label "SPARQL executable"@en ;
    rdfs:comment "The class of resources that encapsulate a SPARQL query."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLExecutable((sh:SPARQLExecutable)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLFunction a rdfs:Class ;
    rdfs:label "SPARQL function"@en ;
    rdfs:comment "A function backed by a SPARQL query - either ASK or SELECT."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Function,
        sh:SPARQLAskExecutable,
        sh:SPARQLSelectExecutable ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLFunction((sh:SPARQLFunction)) -- subClassOf --> http://www.w3.org/ns/shacl#Function((sh:Function))
""",
        """http://www.w3.org/ns/shacl#SPARQLFunction((sh:SPARQLFunction)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLAskExecutable((sh:SPARQLAskExecutable))
""",
        """http://www.w3.org/ns/shacl#SPARQLFunction((sh:SPARQLFunction)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLSelectExecutable((sh:SPARQLSelectExecutable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLRule a rdfs:Class ;
    rdfs:label "SPARQL CONSTRUCT rule"@en ;
    rdfs:comment "The class of SHACL rules based on SPARQL CONSTRUCT queries."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Rule,
        sh:SPARQLConstructExecutable ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLRule((sh:SPARQLRule)) -- subClassOf --> http://www.w3.org/ns/shacl#Rule((sh:Rule))
""",
        """http://www.w3.org/ns/shacl#SPARQLRule((sh:SPARQLRule)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLConstructExecutable((sh:SPARQLConstructExecutable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLSelectExecutable a rdfs:Class ;
    rdfs:label "SPARQL SELECT executable"@en ;
    rdfs:comment "The class of SPARQL executables based on a SELECT query."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLExecutable ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLSelectExecutable((sh:SPARQLSelectExecutable)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLExecutable((sh:SPARQLExecutable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLSelectValidator a rdfs:Class ;
    rdfs:label "SPARQL SELECT validator"@en ;
    rdfs:comment "The class of validators based on SPARQL SELECT queries. The queries are evaluated for each focus node and are supposed to produce bindings for all focus nodes that do not conform."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLSelectExecutable,
        sh:Validator ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLSelectValidator((sh:SPARQLSelectValidator)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLSelectExecutable((sh:SPARQLSelectExecutable))
""",
        """http://www.w3.org/ns/shacl#SPARQLSelectValidator((sh:SPARQLSelectValidator)) -- subClassOf --> http://www.w3.org/ns/shacl#Validator((sh:Validator))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLTarget a rdfs:Class ;
    rdfs:label "SPARQL target"@en ;
    rdfs:comment "The class of targets that are based on SPARQL queries."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLAskExecutable,
        sh:SPARQLSelectExecutable,
        sh:Target ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLTarget((sh:SPARQLTarget)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLAskExecutable((sh:SPARQLAskExecutable))
""",
        """http://www.w3.org/ns/shacl#SPARQLTarget((sh:SPARQLTarget)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLSelectExecutable((sh:SPARQLSelectExecutable))
""",
        """http://www.w3.org/ns/shacl#SPARQLTarget((sh:SPARQLTarget)) -- subClassOf --> http://www.w3.org/ns/shacl#Target((sh:Target))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLTargetType a rdfs:Class ;
    rdfs:label "SPARQL target type"@en ;
    rdfs:comment "The (meta) class for parameterizable targets that are based on SPARQL queries."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLAskExecutable,
        sh:SPARQLSelectExecutable,
        sh:TargetType ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLTargetType((sh:SPARQLTargetType)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLAskExecutable((sh:SPARQLAskExecutable))
""",
        """http://www.w3.org/ns/shacl#SPARQLTargetType((sh:SPARQLTargetType)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLSelectExecutable((sh:SPARQLSelectExecutable))
""",
        """http://www.w3.org/ns/shacl#SPARQLTargetType((sh:SPARQLTargetType)) -- subClassOf --> http://www.w3.org/ns/shacl#TargetType((sh:TargetType))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:SPARQLUpdateExecutable a rdfs:Class ;
    rdfs:label "SPARQL UPDATE executable"@en ;
    rdfs:comment "The class of SPARQL executables based on a SPARQL UPDATE."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:SPARQLExecutable ;
    ns1:label """http://www.w3.org/ns/shacl#SPARQLUpdateExecutable((sh:SPARQLUpdateExecutable)) -- subClassOf --> http://www.w3.org/ns/shacl#SPARQLExecutable((sh:SPARQLExecutable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:Severity a rdfs:Class ;
    rdfs:label "Severity"@en ;
    rdfs:comment "The class of validation result severity levels, including violation and warning levels."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#Severity((sh:Severity)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:Shape a rdfs:Class ;
    rdfs:label "Shape"@en ;
    rdfs:comment "A shape is a collection of constraints that may be targeted for certain nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#Shape((sh:Shape)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:Target a rdfs:Class ;
    rdfs:label "Target"@en ;
    rdfs:comment "The base class of targets such as those based on SPARQL queries."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#Target((sh:Target)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:TargetType a rdfs:Class ;
    rdfs:label "Target type"@en ;
    rdfs:comment "The (meta) class for parameterizable targets.	Instances of this are instantiated as values of the sh:target property."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Class,
        sh:Parameterizable ;
    ns1:label """http://www.w3.org/ns/shacl#TargetType((sh:TargetType)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Class((http://www.w3.org/2000/01/rdf-schema#Class))
""",
        """http://www.w3.org/ns/shacl#TargetType((sh:TargetType)) -- subClassOf --> http://www.w3.org/ns/shacl#Parameterizable((sh:Parameterizable))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:TripleRule a rdfs:Class ;
    rdfs:label "A rule based on triple (subject, predicate, object) pattern."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:Rule ;
    ns1:label """http://www.w3.org/ns/shacl#TripleRule((sh:TripleRule)) -- subClassOf --> http://www.w3.org/ns/shacl#Rule((sh:Rule))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:ValidationReport a rdfs:Class ;
    rdfs:label "Validation report"@en ;
    rdfs:comment "The class of SHACL validation reports."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#ValidationReport((sh:ValidationReport)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:ValidationResult a rdfs:Class ;
    rdfs:label "Validation result"@en ;
    rdfs:comment "The class of validation results."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf sh:AbstractResult ;
    ns1:label """http://www.w3.org/ns/shacl#ValidationResult((sh:ValidationResult)) -- subClassOf --> http://www.w3.org/ns/shacl#AbstractResult((sh:AbstractResult))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:Validator a rdfs:Class ;
    rdfs:label "Validator"@en ;
    rdfs:comment "The class of validators, which provide instructions on how to process a constraint definition. This class serves as base class for the SPARQL-based validators and other possible implementations."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:subClassOf rdfs:Resource ;
    ns1:label """http://www.w3.org/ns/shacl#Validator((sh:Validator)) -- subClassOf --> http://www.w3.org/2000/01/rdf-schema#Resource((http://www.w3.org/2000/01/rdf-schema#Resource))
""" ;
    ns1:syntax "SUBCLASSOF" .

sh:AndConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "And constraint component"@en ;
    rdfs:comment "A constraint component that can be used to test whether a value node conforms to all members of a provided list of shapes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:AndConstraintComponent-and .

sh:ClassConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Class constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that each value node is an instance of a given type."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:ClassConstraintComponent-class .

sh:ClosedConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Closed constraint component"@en ;
    rdfs:comment "A constraint component that can be used to indicate that focus nodes must only have values for those properties that have been explicitly enumerated via sh:property/sh:path."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:ClosedConstraintComponent-closed,
        sh:ClosedConstraintComponent-ignoredProperties .

sh:DatatypeConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Datatype constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the datatype of all value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:DatatypeConstraintComponent-datatype .

sh:DisjointConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Disjoint constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that the set of value nodes is disjoint with the the set of nodes that have the focus node as subject and the value of a given property as predicate."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:DisjointConstraintComponent-disjoint .

sh:EqualsConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Equals constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that the set of value nodes is equal to the set of nodes that have the focus node as subject and the value of a given property as predicate."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:EqualsConstraintComponent-equals .

sh:ExpressionConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Expression constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that a given node expression produces true for all value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:ExpressionConstraintComponent-expression .

sh:HasValueConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Has-value constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that one of the value nodes is a given RDF node."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:HasValueConstraintComponent-hasValue .

sh:InConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "In constraint component"@en ;
    rdfs:comment "A constraint component that can be used to exclusively enumerate the permitted value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:InConstraintComponent-in .

sh:Info a sh:Severity ;
    rdfs:label "Info"@en ;
    rdfs:comment "The severity for an informational validation result."@en ;
    rdfs:isDefinedBy sh: .

sh:JSConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "JavaScript constraint component"@en ;
    rdfs:comment "A constraint component with the parameter sh:js linking to a sh:JSConstraint containing a sh:script."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:JSConstraint-js .

sh:LanguageInConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Language-in constraint component"@en ;
    rdfs:comment "A constraint component that can be used to enumerate language tags that all value nodes must have."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:LanguageInConstraintComponent-languageIn .

sh:LessThanConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Less-than constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that each value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:LessThanConstraintComponent-lessThan .

sh:LessThanOrEqualsConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "less-than-or-equals constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that every value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:LessThanOrEqualsConstraintComponent-lessThanOrEquals .

sh:MaxCountConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Max-count constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the maximum number of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MaxCountConstraintComponent-maxCount .

sh:MaxExclusiveConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Max-exclusive constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the range of value nodes with a maximum exclusive value."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MaxExclusiveConstraintComponent-maxExclusive .

sh:MaxInclusiveConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Max-inclusive constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the range of value nodes with a maximum inclusive value."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MaxInclusiveConstraintComponent-maxInclusive .

sh:MaxLengthConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Max-length constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the maximum string length of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MaxLengthConstraintComponent-maxLength .

sh:MinCountConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Min-count constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the minimum number of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MinCountConstraintComponent-minCount .

sh:MinExclusiveConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Min-exclusive constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the range of value nodes with a minimum exclusive value."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MinExclusiveConstraintComponent-minExclusive .

sh:MinInclusiveConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Min-inclusive constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the range of value nodes with a minimum inclusive value."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MinInclusiveConstraintComponent-minInclusive .

sh:MinLengthConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Min-length constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the minimum string length of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:MinLengthConstraintComponent-minLength .

sh:NodeConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Node constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that all value nodes conform to the given node shape."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:NodeConstraintComponent-node .

sh:NodeKindConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Node-kind constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the RDF node kind of each value node."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:NodeKindConstraintComponent-nodeKind .

sh:NotConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Not constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that value nodes do not conform to a given shape."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:NotConstraintComponent-not .

sh:OrConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Or constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the value nodes so that they conform to at least one out of several provided shapes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:OrConstraintComponent-or .

sh:PatternConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Pattern constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that every value node matches a given regular expression."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:PatternConstraintComponent-flags,
        sh:PatternConstraintComponent-pattern .

sh:PropertyConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Property constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that all value nodes conform to the given property shape."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:PropertyConstraintComponent-property .

sh:QualifiedMaxCountConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Qualified-max-count constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that a specified maximum number of value nodes conforms to a given shape."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:QualifiedMaxCountConstraintComponent-qualifiedMaxCount,
        sh:QualifiedMaxCountConstraintComponent-qualifiedValueShape,
        sh:QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint .

sh:QualifiedMinCountConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Qualified-min-count constraint component"@en ;
    rdfs:comment "A constraint component that can be used to verify that a specified minimum number of value nodes conforms to a given shape."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:QualifiedMinCountConstraintComponent-qualifiedMinCount,
        sh:QualifiedMinCountConstraintComponent-qualifiedValueShape,
        sh:QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint .

sh:SPARQLConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "SPARQL constraint component"@en ;
    rdfs:comment "A constraint component that can be used to define constraints based on SPARQL queries."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:SPARQLConstraintComponent-sparql .

sh:UniqueLangConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Unique-languages constraint component"@en ;
    rdfs:comment "A constraint component that can be used to specify that no pair of value nodes may use the same language tag."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:UniqueLangConstraintComponent-uniqueLang .

sh:Violation a sh:Severity ;
    rdfs:label "Violation"@en ;
    rdfs:comment "The severity for a violation validation result."@en ;
    rdfs:isDefinedBy sh: .

sh:Warning a sh:Severity ;
    rdfs:label "Warning"@en ;
    rdfs:comment "The severity for a warning validation result."@en ;
    rdfs:isDefinedBy sh: .

sh:XoneConstraintComponent a sh:ConstraintComponent ;
    rdfs:label "Exactly one constraint component"@en ;
    rdfs:comment "A constraint component that can be used to restrict the value nodes so that they conform to exactly one out of several provided shapes."@en ;
    rdfs:isDefinedBy sh: ;
    sh:parameter sh:XoneConstraintComponent-xone .

sh:alternativePath a rdf:Property ;
    rdfs:label "alternative path"@en ;
    rdfs:comment "The (single) value of this property must be a list of path elements, representing the elements of alternative paths."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List ;
    ns1:label "rdfs:Resource -- sh:alternativePath --> http://www.w3.org/1999/02/22-rdf-syntax-ns#List" ;
    ns1:syntax "RDF_PROPERTY" .

sh:annotationProperty a rdf:Property ;
    rdfs:label "annotation property"@en ;
    rdfs:comment "The annotation property that shall be set."@en ;
    rdfs:domain sh:ResultAnnotation ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property ;
    ns1:label "http://www.w3.org/ns/shacl#ResultAnnotation -- sh:annotationProperty --> http://www.w3.org/1999/02/22-rdf-syntax-ns#Property" ;
    ns1:syntax "RDF_PROPERTY" .

sh:annotationValue a rdf:Property ;
    rdfs:label "annotation value"@en ;
    rdfs:comment "The (default) values of the annotation property."@en ;
    rdfs:domain sh:ResultAnnotation ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#ResultAnnotation -- sh:annotationValue --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:annotationVarName a rdf:Property ;
    rdfs:label "annotation variable name"@en ;
    rdfs:comment "The name of the SPARQL variable from the SELECT clause that shall be used for the values."@en ;
    rdfs:domain sh:ResultAnnotation ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string ;
    ns1:label "http://www.w3.org/ns/shacl#ResultAnnotation -- sh:annotationVarName --> http://www.w3.org/2001/XMLSchema#string" ;
    ns1:syntax "RDF_PROPERTY" .

sh:ask a rdf:Property ;
    rdfs:label "ask"@en ;
    rdfs:comment "The SPARQL ASK query to execute."@en ;
    rdfs:domain sh:SPARQLAskExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string ;
    ns1:label "http://www.w3.org/ns/shacl#SPARQLAskExecutable -- sh:ask --> http://www.w3.org/2001/XMLSchema#string" ;
    ns1:syntax "RDF_PROPERTY" .

sh:condition a rdf:Property ;
    rdfs:label "condition"@en ;
    rdfs:comment "The shapes that the focus nodes need to conform to before a rule is executed on them."@en ;
    rdfs:domain sh:Rule ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Shape ;
    ns1:label "http://www.w3.org/ns/shacl#Rule -- sh:condition --> http://www.w3.org/ns/shacl#Shape" ;
    ns1:syntax "RDF_PROPERTY" .

sh:conforms a rdf:Property ;
    rdfs:label "conforms"@en ;
    rdfs:comment "True if the validation did not produce any validation results, and false otherwise."@en ;
    rdfs:domain sh:ValidationReport ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean ;
    ns1:label "http://www.w3.org/ns/shacl#ValidationReport -- sh:conforms --> http://www.w3.org/2001/XMLSchema#boolean" ;
    ns1:syntax "RDF_PROPERTY" .

sh:construct a rdf:Property ;
    rdfs:label "construct"@en ;
    rdfs:comment "The SPARQL CONSTRUCT query to execute."@en ;
    rdfs:domain sh:SPARQLConstructExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string ;
    ns1:label "http://www.w3.org/ns/shacl#SPARQLConstructExecutable -- sh:construct --> http://www.w3.org/2001/XMLSchema#string" ;
    ns1:syntax "RDF_PROPERTY" .

sh:deactivated a rdf:Property ;
    rdfs:label "deactivated"@en ;
    rdfs:comment "If set to true then all nodes conform to this."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean ;
    ns1:label "rdfs:Resource -- sh:deactivated --> http://www.w3.org/2001/XMLSchema#boolean" ;
    ns1:syntax "RDF_PROPERTY" .

sh:declare a rdf:Property ;
    rdfs:label "declare"@en ;
    rdfs:comment "Links a resource with its namespace prefix declarations."@en ;
    rdfs:domain owl:Ontology ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:PrefixDeclaration ;
    ns1:label "http://www.w3.org/2002/07/owl#Ontology -- sh:declare --> http://www.w3.org/ns/shacl#PrefixDeclaration" ;
    ns1:syntax "RDF_PROPERTY" .

sh:defaultValue a rdf:Property ;
    rdfs:label "default value"@en ;
    rdfs:comment "A default value for a property, for example for user interface tools to pre-populate input fields."@en ;
    rdfs:domain sh:PropertyShape ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#PropertyShape -- sh:defaultValue --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:description a rdf:Property ;
    rdfs:label "description"@en ;
    rdfs:comment "Human-readable descriptions for the property in the context of the surrounding shape."@en ;
    rdfs:domain sh:PropertyShape ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#PropertyShape -- sh:description --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:detail a rdf:Property ;
    rdfs:label "detail"@en ;
    rdfs:comment "Links a result with other results that provide more details, for example to describe violations against nested shapes."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:AbstractResult ;
    ns1:label "http://www.w3.org/ns/shacl#AbstractResult -- sh:detail --> http://www.w3.org/ns/shacl#AbstractResult" ;
    ns1:syntax "RDF_PROPERTY" .

sh:entailment a rdf:Property ;
    rdfs:label "entailment"@en ;
    rdfs:comment "An entailment regime that indicates what kind of inferencing is required by a shapes graph."@en ;
    rdfs:domain owl:Ontology ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource ;
    ns1:label "http://www.w3.org/2002/07/owl#Ontology -- sh:entailment --> http://www.w3.org/2000/01/rdf-schema#Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:filterShape a rdf:Property ;
    rdfs:label "filter shape"@en ;
    rdfs:comment "The shape that all input nodes of the expression need to conform to."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Shape ;
    ns1:label "rdfs:Resource -- sh:filterShape --> http://www.w3.org/ns/shacl#Shape" ;
    ns1:syntax "RDF_PROPERTY" .

sh:focusNode a rdf:Property ;
    rdfs:label "focus node"@en ;
    rdfs:comment "The focus node that was validated when the result was produced."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#AbstractResult -- sh:focusNode --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:group a rdf:Property ;
    rdfs:label "group"@en ;
    rdfs:comment "Can be used to link to a property group to indicate that a property shape belongs to a group of related property shapes."@en ;
    rdfs:domain sh:PropertyShape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:PropertyGroup ;
    ns1:label "http://www.w3.org/ns/shacl#PropertyShape -- sh:group --> http://www.w3.org/ns/shacl#PropertyGroup" ;
    ns1:syntax "RDF_PROPERTY" .

sh:intersection a rdf:Property ;
    rdfs:label "intersection"@en ;
    rdfs:comment "A list of node expressions that shall be intersected."@en ;
    rdfs:isDefinedBy sh: ;
    ns1:label "rdfs:Resource -- sh:intersection --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:inversePath a rdf:Property ;
    rdfs:label "inverse path"@en ;
    rdfs:comment "The (single) value of this property represents an inverse path (object to subject)."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource ;
    ns1:label "rdfs:Resource -- sh:inversePath --> http://www.w3.org/2000/01/rdf-schema#Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:jsFunctionName a rdf:Property ;
    rdfs:label "JavaScript function name"@en ;
    rdfs:comment "The name of the JavaScript function to execute."@en ;
    rdfs:domain sh:JSExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string ;
    ns1:label "http://www.w3.org/ns/shacl#JSExecutable -- sh:jsFunctionName --> http://www.w3.org/2001/XMLSchema#string" ;
    ns1:syntax "RDF_PROPERTY" .

sh:jsLibrary a rdf:Property ;
    rdfs:label "JavaScript library"@en ;
    rdfs:comment "Declares which JavaScript libraries are needed to execute this."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:JSLibrary ;
    ns1:label "rdfs:Resource -- sh:jsLibrary --> http://www.w3.org/ns/shacl#JSLibrary" ;
    ns1:syntax "RDF_PROPERTY" .

sh:jsLibraryURL a rdf:Property ;
    rdfs:label "JavaScript library URL"@en ;
    rdfs:comment "Declares the URLs of a JavaScript library. This should be the absolute URL of a JavaScript file. Implementations may redirect those to local files."@en ;
    rdfs:domain sh:JSLibrary ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:anyURI ;
    ns1:label "http://www.w3.org/ns/shacl#JSLibrary -- sh:jsLibraryURL --> http://www.w3.org/2001/XMLSchema#anyURI" ;
    ns1:syntax "RDF_PROPERTY" .

sh:labelTemplate a rdf:Property ;
    rdfs:label "label template"@en ;
    rdfs:comment "Outlines how human-readable labels of instances of the associated Parameterizable shall be produced. The values can contain {?paramName} as placeholders for the actual values of the given parameter."@en ;
    rdfs:domain sh:Parameterizable ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#Parameterizable -- sh:labelTemplate --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:message a rdf:Property ;
    rdfs:label "message"@en ;
    rdfs:comment "A human-readable message (possibly with placeholders for variables) explaining the cause of the result."@en ;
    rdfs:isDefinedBy sh: ;
    ns1:label "rdfs:Resource -- sh:message --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:name a rdf:Property ;
    rdfs:label "name"@en ;
    rdfs:comment "Human-readable labels for the property in the context of the surrounding shape."@en ;
    rdfs:domain sh:PropertyShape ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#PropertyShape -- sh:name --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:namespace a rdf:Property ;
    rdfs:label "namespace"@en ;
    rdfs:comment "The namespace associated with a prefix in a prefix declaration."@en ;
    rdfs:domain sh:PrefixDeclaration ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:anyURI ;
    ns1:label "http://www.w3.org/ns/shacl#PrefixDeclaration -- sh:namespace --> http://www.w3.org/2001/XMLSchema#anyURI" ;
    ns1:syntax "RDF_PROPERTY" .

sh:nodeValidator a rdf:Property ;
    rdfs:label "shape validator"@en ;
    rdfs:comment "The validator(s) used to evaluate a constraint in the context of a node shape."@en ;
    rdfs:domain sh:ConstraintComponent ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Validator ;
    ns1:label "http://www.w3.org/ns/shacl#ConstraintComponent -- sh:nodeValidator --> http://www.w3.org/ns/shacl#Validator" ;
    ns1:syntax "RDF_PROPERTY" .

sh:nodes a rdf:Property ;
    rdfs:label "nodes"@en ;
    rdfs:comment "The node expression producing the input nodes of a filter shape expression."@en ;
    rdfs:isDefinedBy sh: ;
    ns1:label "rdfs:Resource -- sh:nodes --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:object a rdf:Property ;
    rdfs:label "object"@en ;
    rdfs:comment "An expression producing the nodes that shall be inferred as objects."@en ;
    rdfs:domain sh:TripleRule ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#TripleRule -- sh:object --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:oneOrMorePath a rdf:Property ;
    rdfs:label "one or more path"@en ;
    rdfs:comment "The (single) value of this property represents a path that is matched one or more times."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource ;
    ns1:label "rdfs:Resource -- sh:oneOrMorePath --> http://www.w3.org/2000/01/rdf-schema#Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:optional a rdf:Property ;
    rdfs:label "optional"@en ;
    rdfs:comment "Indicates whether a parameter is optional."@en ;
    rdfs:domain sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean ;
    ns1:label "http://www.w3.org/ns/shacl#Parameter -- sh:optional --> http://www.w3.org/2001/XMLSchema#boolean" ;
    ns1:syntax "RDF_PROPERTY" .

sh:order a rdf:Property ;
    rdfs:label "order"@en ;
    rdfs:comment "Specifies the relative order of this compared to its siblings. For example use 0 for the first, 1 for the second."@en ;
    rdfs:isDefinedBy sh: ;
    ns1:label "rdfs:Resource -- sh:order --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:parameter a rdf:Property ;
    rdfs:label "parameter"@en ;
    rdfs:comment "The parameters of a function or constraint component."@en ;
    rdfs:domain sh:Parameterizable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Parameter ;
    ns1:label "http://www.w3.org/ns/shacl#Parameterizable -- sh:parameter --> http://www.w3.org/ns/shacl#Parameter" ;
    ns1:syntax "RDF_PROPERTY" .

sh:path a rdf:Property ;
    rdfs:label "path"@en ;
    rdfs:comment "Specifies the property path of a property shape."@en ;
    rdfs:domain sh:PropertyShape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource ;
    ns1:label "http://www.w3.org/ns/shacl#PropertyShape -- sh:path --> http://www.w3.org/2000/01/rdf-schema#Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:predicate a rdf:Property ;
    rdfs:label "predicate"@en ;
    rdfs:comment "An expression producing the properties that shall be inferred as predicates."@en ;
    rdfs:domain sh:TripleRule ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#TripleRule -- sh:predicate --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:prefix a rdf:Property ;
    rdfs:label "prefix"@en ;
    rdfs:comment "The prefix of a prefix declaration."@en ;
    rdfs:domain sh:PrefixDeclaration ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string ;
    ns1:label "http://www.w3.org/ns/shacl#PrefixDeclaration -- sh:prefix --> http://www.w3.org/2001/XMLSchema#string" ;
    ns1:syntax "RDF_PROPERTY" .

sh:prefixes a rdf:Property ;
    rdfs:label "prefixes"@en ;
    rdfs:comment "The prefixes that shall be applied before parsing the associated SPARQL query."@en ;
    rdfs:domain sh:SPARQLExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range owl:Ontology ;
    ns1:label "http://www.w3.org/ns/shacl#SPARQLExecutable -- sh:prefixes --> http://www.w3.org/2002/07/owl#Ontology" ;
    ns1:syntax "RDF_PROPERTY" .

sh:propertyValidator a rdf:Property ;
    rdfs:label "property validator"@en ;
    rdfs:comment "The validator(s) used to evaluate a constraint in the context of a property shape."@en ;
    rdfs:domain sh:ConstraintComponent ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Validator ;
    ns1:label "http://www.w3.org/ns/shacl#ConstraintComponent -- sh:propertyValidator --> http://www.w3.org/ns/shacl#Validator" ;
    ns1:syntax "RDF_PROPERTY" .

sh:result a rdf:Property ;
    rdfs:label "result"@en ;
    rdfs:comment "The validation results contained in a validation report."@en ;
    rdfs:domain sh:ValidationReport ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:ValidationResult ;
    ns1:label "http://www.w3.org/ns/shacl#ValidationReport -- sh:result --> http://www.w3.org/ns/shacl#ValidationResult" ;
    ns1:syntax "RDF_PROPERTY" .

sh:resultAnnotation a rdf:Property ;
    rdfs:label "result annotation"@en ;
    rdfs:comment "Links a SPARQL validator with zero or more sh:ResultAnnotation instances, defining how to derive additional result properties based on the variables of the SELECT query."@en ;
    rdfs:domain sh:SPARQLSelectValidator ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:ResultAnnotation ;
    ns1:label "http://www.w3.org/ns/shacl#SPARQLSelectValidator -- sh:resultAnnotation --> http://www.w3.org/ns/shacl#ResultAnnotation" ;
    ns1:syntax "RDF_PROPERTY" .

sh:resultMessage a rdf:Property ;
    rdfs:label "result message"@en ;
    rdfs:comment "Human-readable messages explaining the cause of the result."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#AbstractResult -- sh:resultMessage --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:resultPath a rdf:Property ;
    rdfs:label "result path"@en ;
    rdfs:comment "The path of a validation result, based on the path of the validated property shape."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource ;
    ns1:label "http://www.w3.org/ns/shacl#AbstractResult -- sh:resultPath --> http://www.w3.org/2000/01/rdf-schema#Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:resultSeverity a rdf:Property ;
    rdfs:label "result severity"@en ;
    rdfs:comment "The severity of the result, e.g. warning."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Severity ;
    ns1:label "http://www.w3.org/ns/shacl#AbstractResult -- sh:resultSeverity --> http://www.w3.org/ns/shacl#Severity" ;
    ns1:syntax "RDF_PROPERTY" .

sh:returnType a rdf:Property ;
    rdfs:label "return type"@en ;
    rdfs:comment "The expected type of values returned by the associated function."@en ;
    rdfs:domain sh:Function ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Class ;
    ns1:label "http://www.w3.org/ns/shacl#Function -- sh:returnType --> http://www.w3.org/2000/01/rdf-schema#Class" ;
    ns1:syntax "RDF_PROPERTY" .

sh:rule a rdf:Property ;
    rdfs:label "rule"@en ;
    rdfs:comment "The rules linked to a shape."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Rule ;
    ns1:label "http://www.w3.org/ns/shacl#Shape -- sh:rule --> http://www.w3.org/ns/shacl#Rule" ;
    ns1:syntax "RDF_PROPERTY" .

sh:select a rdf:Property ;
    rdfs:label "select"@en ;
    rdfs:comment "The SPARQL SELECT query to execute."@en ;
    rdfs:domain sh:SPARQLSelectExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string ;
    ns1:label "http://www.w3.org/ns/shacl#SPARQLSelectExecutable -- sh:select --> http://www.w3.org/2001/XMLSchema#string" ;
    ns1:syntax "RDF_PROPERTY" .

sh:severity a rdf:Property ;
    rdfs:label "severity"@en ;
    rdfs:comment "Defines the severity that validation results produced by a shape must have. Defaults to sh:Violation."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Severity ;
    ns1:label "http://www.w3.org/ns/shacl#Shape -- sh:severity --> http://www.w3.org/ns/shacl#Severity" ;
    ns1:syntax "RDF_PROPERTY" .

sh:shapesGraph a rdf:Property ;
    rdfs:label "shapes graph"@en ;
    rdfs:comment "Shapes graphs that should be used when validating this data graph."@en ;
    rdfs:domain owl:Ontology ;
    rdfs:isDefinedBy sh: ;
    rdfs:range owl:Ontology ;
    ns1:label "http://www.w3.org/2002/07/owl#Ontology -- sh:shapesGraph --> http://www.w3.org/2002/07/owl#Ontology" ;
    ns1:syntax "RDF_PROPERTY" .

sh:shapesGraphWellFormed a rdf:Property ;
    rdfs:label "shapes graph well-formed"@en ;
    rdfs:comment "If true then the validation engine was certain that the shapes graph has passed all SHACL syntax requirements during the validation process."@en ;
    rdfs:domain sh:ValidationReport ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean ;
    ns1:label "http://www.w3.org/ns/shacl#ValidationReport -- sh:shapesGraphWellFormed --> http://www.w3.org/2001/XMLSchema#boolean" ;
    ns1:syntax "RDF_PROPERTY" .

sh:sourceConstraint a rdf:Property ;
    rdfs:label "source constraint"@en ;
    rdfs:comment "The constraint that was validated when the result was produced."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#AbstractResult -- sh:sourceConstraint --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:sourceConstraintComponent a rdf:Property ;
    rdfs:label "source constraint component"@en ;
    rdfs:comment "The constraint component that is the source of the result."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:ConstraintComponent ;
    ns1:label "http://www.w3.org/ns/shacl#AbstractResult -- sh:sourceConstraintComponent --> http://www.w3.org/ns/shacl#ConstraintComponent" ;
    ns1:syntax "RDF_PROPERTY" .

sh:sourceShape a rdf:Property ;
    rdfs:label "source shape"@en ;
    rdfs:comment "The shape that is was validated when the result was produced."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Shape ;
    ns1:label "http://www.w3.org/ns/shacl#AbstractResult -- sh:sourceShape --> http://www.w3.org/ns/shacl#Shape" ;
    ns1:syntax "RDF_PROPERTY" .

sh:subject a rdf:Property ;
    rdfs:label "subject"@en ;
    rdfs:comment "An expression producing the resources that shall be inferred as subjects."@en ;
    rdfs:domain sh:TripleRule ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#TripleRule -- sh:subject --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:suggestedShapesGraph a rdf:Property ;
    rdfs:label "suggested shapes graph"@en ;
    rdfs:comment "Suggested shapes graphs for this ontology. The values of this property may be used in the absence of specific sh:shapesGraph statements."@en ;
    rdfs:domain owl:Ontology ;
    rdfs:isDefinedBy sh: ;
    rdfs:range owl:Ontology ;
    ns1:label "http://www.w3.org/2002/07/owl#Ontology -- sh:suggestedShapesGraph --> http://www.w3.org/2002/07/owl#Ontology" ;
    ns1:syntax "RDF_PROPERTY" .

sh:target a rdf:Property ;
    rdfs:label "target"@en ;
    rdfs:comment "Links a shape to a target specified by an extension language, for example instances of sh:SPARQLTarget."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Target ;
    ns1:label "http://www.w3.org/ns/shacl#Shape -- sh:target --> http://www.w3.org/ns/shacl#Target" ;
    ns1:syntax "RDF_PROPERTY" .

sh:targetClass a rdf:Property ;
    rdfs:label "target class"@en ;
    rdfs:comment "Links a shape to a class, indicating that all instances of the class must conform to the shape."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Class ;
    ns1:label "http://www.w3.org/ns/shacl#Shape -- sh:targetClass --> http://www.w3.org/2000/01/rdf-schema#Class" ;
    ns1:syntax "RDF_PROPERTY" .

sh:targetNode a rdf:Property ;
    rdfs:label "target node"@en ;
    rdfs:comment "Links a shape to individual nodes, indicating that these nodes must conform to the shape."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#Shape -- sh:targetNode --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:targetObjectsOf a rdf:Property ;
    rdfs:label "target objects of"@en ;
    rdfs:comment "Links a shape to a property, indicating that all all objects of triples that have the given property as their predicate must conform to the shape."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property ;
    ns1:label "http://www.w3.org/ns/shacl#Shape -- sh:targetObjectsOf --> http://www.w3.org/1999/02/22-rdf-syntax-ns#Property" ;
    ns1:syntax "RDF_PROPERTY" .

sh:targetSubjectsOf a rdf:Property ;
    rdfs:label "target subjects of"@en ;
    rdfs:comment "Links a shape to a property, indicating that all subjects of triples that have the given property as their predicate must conform to the shape."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property ;
    ns1:label "http://www.w3.org/ns/shacl#Shape -- sh:targetSubjectsOf --> http://www.w3.org/1999/02/22-rdf-syntax-ns#Property" ;
    ns1:syntax "RDF_PROPERTY" .

sh:this a rdfs:Resource ;
    rdfs:label "this"@en ;
    rdfs:comment "A node expression that represents the current focus node."@en ;
    rdfs:isDefinedBy sh: .

sh:union a rdf:Property ;
    rdfs:label "union"@en ;
    rdfs:comment "A list of node expressions that shall be used together."@en ;
    rdfs:isDefinedBy sh: ;
    ns1:label "rdfs:Resource -- sh:union --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:update a rdf:Property ;
    rdfs:label "update"@en ;
    rdfs:comment "The SPARQL UPDATE to execute."@en ;
    rdfs:domain sh:SPARQLUpdateExecutable ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string ;
    ns1:label "http://www.w3.org/ns/shacl#SPARQLUpdateExecutable -- sh:update --> http://www.w3.org/2001/XMLSchema#string" ;
    ns1:syntax "RDF_PROPERTY" .

sh:validator a rdf:Property ;
    rdfs:label "validator"@en ;
    rdfs:comment "The validator(s) used to evaluate constraints of either node or property shapes."@en ;
    rdfs:domain sh:ConstraintComponent ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Validator ;
    ns1:label "http://www.w3.org/ns/shacl#ConstraintComponent -- sh:validator --> http://www.w3.org/ns/shacl#Validator" ;
    ns1:syntax "RDF_PROPERTY" .

sh:value a rdf:Property ;
    rdfs:label "value"@en ;
    rdfs:comment "An RDF node that has caused the result."@en ;
    rdfs:domain sh:AbstractResult ;
    rdfs:isDefinedBy sh: ;
    ns1:label "http://www.w3.org/ns/shacl#AbstractResult -- sh:value --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:zeroOrMorePath a rdf:Property ;
    rdfs:label "zero or more path"@en ;
    rdfs:comment "The (single) value of this property represents a path that is matched zero or more times."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource ;
    ns1:label "rdfs:Resource -- sh:zeroOrMorePath --> http://www.w3.org/2000/01/rdf-schema#Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:zeroOrOnePath a rdf:Property ;
    rdfs:label "zero or one path"@en ;
    rdfs:comment "The (single) value of this property represents a path that is matched zero or one times."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Resource ;
    ns1:label "rdfs:Resource -- sh:zeroOrOnePath --> http://www.w3.org/2000/01/rdf-schema#Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:AndConstraintComponent-and a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:and .

sh:BlankNode a sh:NodeKind ;
    rdfs:label "Blank node"@en ;
    rdfs:comment "The node kind of all blank nodes."@en ;
    rdfs:isDefinedBy sh: .

sh:BlankNodeOrIRI a sh:NodeKind ;
    rdfs:label "Blank node or IRI"@en ;
    rdfs:comment "The node kind of all blank nodes or IRIs."@en ;
    rdfs:isDefinedBy sh: .

sh:BlankNodeOrLiteral a sh:NodeKind ;
    rdfs:label "Blank node or literal"@en ;
    rdfs:comment "The node kind of all blank nodes or literals."@en ;
    rdfs:isDefinedBy sh: .

sh:ClassConstraintComponent-class a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:nodeKind sh:IRI ;
    sh:path sh:class .

sh:ClosedConstraintComponent-closed a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:boolean ;
    sh:path sh:closed .

sh:ClosedConstraintComponent-ignoredProperties a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:optional true ;
    sh:path sh:ignoredProperties .

sh:DatatypeConstraintComponent-datatype a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:nodeKind sh:IRI ;
    sh:path sh:datatype .

sh:DisjointConstraintComponent-disjoint a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:nodeKind sh:IRI ;
    sh:path sh:disjoint .

sh:EqualsConstraintComponent-equals a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:nodeKind sh:IRI ;
    sh:path sh:equals .

sh:ExpressionConstraintComponent-expression a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:expression .

sh:HasValueConstraintComponent-hasValue a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:hasValue .

sh:IRIOrLiteral a sh:NodeKind ;
    rdfs:label "IRI or literal"@en ;
    rdfs:comment "The node kind of all IRIs or literals."@en ;
    rdfs:isDefinedBy sh: .

sh:InConstraintComponent-in a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:path sh:in .

sh:JSConstraint-js a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:js .

sh:LanguageInConstraintComponent-languageIn a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:path sh:languageIn .

sh:LessThanConstraintComponent-lessThan a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:nodeKind sh:IRI ;
    sh:path sh:lessThan .

sh:LessThanOrEqualsConstraintComponent-lessThanOrEquals a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:nodeKind sh:IRI ;
    sh:path sh:lessThanOrEquals .

sh:MaxCountConstraintComponent-maxCount a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path sh:maxCount .

sh:MaxExclusiveConstraintComponent-maxExclusive a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:nodeKind sh:Literal ;
    sh:path sh:maxExclusive .

sh:MaxInclusiveConstraintComponent-maxInclusive a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:nodeKind sh:Literal ;
    sh:path sh:maxInclusive .

sh:MaxLengthConstraintComponent-maxLength a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path sh:maxLength .

sh:MinCountConstraintComponent-minCount a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path sh:minCount .

sh:MinExclusiveConstraintComponent-minExclusive a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:nodeKind sh:Literal ;
    sh:path sh:minExclusive .

sh:MinInclusiveConstraintComponent-minInclusive a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:maxCount 1 ;
    sh:nodeKind sh:Literal ;
    sh:path sh:minInclusive .

sh:MinLengthConstraintComponent-minLength a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:maxCount 1 ;
    sh:path sh:minLength .

sh:NodeConstraintComponent-node a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:node .

sh:NodeKindConstraintComponent-nodeKind a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:in ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ;
    sh:maxCount 1 ;
    sh:path sh:nodeKind .

sh:NotConstraintComponent-not a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:not .

sh:OrConstraintComponent-or a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:or .

sh:PatternConstraintComponent-flags a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:string ;
    sh:optional true ;
    sh:path sh:flags .

sh:PatternConstraintComponent-pattern a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:string ;
    sh:path sh:pattern .

sh:PropertyConstraintComponent-property a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:property .

sh:QualifiedMaxCountConstraintComponent-qualifiedMaxCount a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:path sh:qualifiedMaxCount .

sh:QualifiedMaxCountConstraintComponent-qualifiedValueShape a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:qualifiedValueShape .

sh:QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:boolean ;
    sh:optional true ;
    sh:path sh:qualifiedValueShapesDisjoint .

sh:QualifiedMinCountConstraintComponent-qualifiedMinCount a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:integer ;
    sh:path sh:qualifiedMinCount .

sh:QualifiedMinCountConstraintComponent-qualifiedValueShape a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:qualifiedValueShape .

sh:QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:boolean ;
    sh:optional true ;
    sh:path sh:qualifiedValueShapesDisjoint .

sh:SPARQLConstraintComponent-sparql a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:sparql .

sh:UniqueLangConstraintComponent-uniqueLang a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:datatype xsd:boolean ;
    sh:maxCount 1 ;
    sh:path sh:uniqueLang .

sh:XoneConstraintComponent-xone a sh:Parameter ;
    rdfs:isDefinedBy sh: ;
    sh:path sh:xone .

sh:and a rdf:Property ;
    rdfs:label "and"@en ;
    rdfs:comment "RDF list of shapes to validate the value nodes against."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List ;
    ns1:label "rdfs:Resource -- sh:and --> http://www.w3.org/1999/02/22-rdf-syntax-ns#List" ;
    ns1:syntax "RDF_PROPERTY" .

sh:class a rdf:Property ;
    rdfs:label "class"@en ;
    rdfs:comment "The type that all value nodes must have."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Class ;
    ns1:label "rdfs:Resource -- sh:class --> http://www.w3.org/2000/01/rdf-schema#Class" ;
    ns1:syntax "RDF_PROPERTY" .

sh:closed a rdf:Property ;
    rdfs:label "closed"@en ;
    rdfs:comment "If set to true then the shape is closed."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean ;
    ns1:label "rdfs:Resource -- sh:closed --> http://www.w3.org/2001/XMLSchema#boolean" ;
    ns1:syntax "RDF_PROPERTY" .

sh:datatype a rdf:Property ;
    rdfs:label "datatype"@en ;
    rdfs:comment "Specifies an RDF datatype that all value nodes must have."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdfs:Datatype ;
    ns1:label "rdfs:Resource -- sh:datatype --> http://www.w3.org/2000/01/rdf-schema#Datatype" ;
    ns1:syntax "RDF_PROPERTY" .

sh:disjoint a rdf:Property ;
    rdfs:label "disjoint"@en ;
    rdfs:comment "Specifies a property where the set of values must be disjoint with the value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property ;
    ns1:label "rdfs:Resource -- sh:disjoint --> http://www.w3.org/1999/02/22-rdf-syntax-ns#Property" ;
    ns1:syntax "RDF_PROPERTY" .

sh:equals a rdf:Property ;
    rdfs:label "equals"@en ;
    rdfs:comment "Specifies a property that must have the same values as the value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property ;
    ns1:label "rdfs:Resource -- sh:equals --> http://www.w3.org/1999/02/22-rdf-syntax-ns#Property" ;
    ns1:syntax "RDF_PROPERTY" .

sh:expression a rdf:Property ;
    rdfs:label "expression"@en ;
    rdfs:comment "The node expression that must return true for the value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    ns1:label "rdfs:Resource -- sh:expression --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:flags a rdf:Property ;
    rdfs:label "flags"@en ;
    rdfs:comment "An optional flag to be used with regular expression pattern matching."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string ;
    ns1:label "rdfs:Resource -- sh:flags --> http://www.w3.org/2001/XMLSchema#string" ;
    ns1:syntax "RDF_PROPERTY" .

sh:hasValue a rdf:Property ;
    rdfs:label "has value"@en ;
    rdfs:comment "Specifies a value that must be among the value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    ns1:label "rdfs:Resource -- sh:hasValue --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:ignoredProperties a rdf:Property ;
    rdfs:label "ignored properties"@en ;
    rdfs:comment "An optional RDF list of properties that are also permitted in addition to those explicitly enumerated via sh:property/sh:path."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List ;
    ns1:label "rdfs:Resource -- sh:ignoredProperties --> http://www.w3.org/1999/02/22-rdf-syntax-ns#List" ;
    ns1:syntax "RDF_PROPERTY" .

sh:in a rdf:Property ;
    rdfs:label "in"@en ;
    rdfs:comment "Specifies a list of allowed values so that each value node must be among the members of the given list."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List ;
    ns1:label "rdfs:Resource -- sh:in --> http://www.w3.org/1999/02/22-rdf-syntax-ns#List" ;
    ns1:syntax "RDF_PROPERTY" .

sh:js a rdf:Property ;
    rdfs:label "JavaScript constraint"@en ;
    rdfs:comment "Constraints expressed in JavaScript." ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:JSConstraint ;
    ns1:label "rdfs:Resource -- sh:js --> http://www.w3.org/ns/shacl#JSConstraint" ;
    ns1:syntax "RDF_PROPERTY" .

sh:languageIn a rdf:Property ;
    rdfs:label "language in"@en ;
    rdfs:comment "Specifies a list of language tags that all value nodes must have."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List ;
    ns1:label "rdfs:Resource -- sh:languageIn --> http://www.w3.org/1999/02/22-rdf-syntax-ns#List" ;
    ns1:syntax "RDF_PROPERTY" .

sh:lessThan a rdf:Property ;
    rdfs:label "less than"@en ;
    rdfs:comment "Specifies a property that must have smaller values than the value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property ;
    ns1:label "rdfs:Resource -- sh:lessThan --> http://www.w3.org/1999/02/22-rdf-syntax-ns#Property" ;
    ns1:syntax "RDF_PROPERTY" .

sh:lessThanOrEquals a rdf:Property ;
    rdfs:label "less than or equals"@en ;
    rdfs:comment "Specifies a property that must have smaller or equal values than the value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:Property ;
    ns1:label "rdfs:Resource -- sh:lessThanOrEquals --> http://www.w3.org/1999/02/22-rdf-syntax-ns#Property" ;
    ns1:syntax "RDF_PROPERTY" .

sh:maxCount a rdf:Property ;
    rdfs:label "max count"@en ;
    rdfs:comment "Specifies the maximum number of values in the set of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer ;
    ns1:label "rdfs:Resource -- sh:maxCount --> http://www.w3.org/2001/XMLSchema#integer" ;
    ns1:syntax "RDF_PROPERTY" .

sh:maxExclusive a rdf:Property ;
    rdfs:label "max exclusive"@en ;
    rdfs:comment "Specifies the maximum exclusive value of each value node."@en ;
    rdfs:isDefinedBy sh: ;
    ns1:label "rdfs:Resource -- sh:maxExclusive --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:maxInclusive a rdf:Property ;
    rdfs:label "max inclusive"@en ;
    rdfs:comment "Specifies the maximum inclusive value of each value node."@en ;
    rdfs:isDefinedBy sh: ;
    ns1:label "rdfs:Resource -- sh:maxInclusive --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:maxLength a rdf:Property ;
    rdfs:label "max length"@en ;
    rdfs:comment "Specifies the maximum string length of each value node."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer ;
    ns1:label "rdfs:Resource -- sh:maxLength --> http://www.w3.org/2001/XMLSchema#integer" ;
    ns1:syntax "RDF_PROPERTY" .

sh:minCount a rdf:Property ;
    rdfs:label "min count"@en ;
    rdfs:comment "Specifies the minimum number of values in the set of value nodes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer ;
    ns1:label "rdfs:Resource -- sh:minCount --> http://www.w3.org/2001/XMLSchema#integer" ;
    ns1:syntax "RDF_PROPERTY" .

sh:minExclusive a rdf:Property ;
    rdfs:label "min exclusive"@en ;
    rdfs:comment "Specifies the minimum exclusive value of each value node."@en ;
    rdfs:isDefinedBy sh: ;
    ns1:label "rdfs:Resource -- sh:minExclusive --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:minInclusive a rdf:Property ;
    rdfs:label "min inclusive"@en ;
    rdfs:comment "Specifies the minimum inclusive value of each value node."@en ;
    rdfs:isDefinedBy sh: ;
    ns1:label "rdfs:Resource -- sh:minInclusive --> rdfs:Resource" ;
    ns1:syntax "RDF_PROPERTY" .

sh:minLength a rdf:Property ;
    rdfs:label "min length"@en ;
    rdfs:comment "Specifies the minimum string length of each value node."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer ;
    ns1:label "rdfs:Resource -- sh:minLength --> http://www.w3.org/2001/XMLSchema#integer" ;
    ns1:syntax "RDF_PROPERTY" .

sh:node a rdf:Property ;
    rdfs:label "node"@en ;
    rdfs:comment "Specifies the node shape that all value nodes must conform to."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:NodeShape ;
    ns1:label "rdfs:Resource -- sh:node --> http://www.w3.org/ns/shacl#NodeShape" ;
    ns1:syntax "RDF_PROPERTY" .

sh:nodeKind a rdf:Property ;
    rdfs:label "node kind"@en ;
    rdfs:comment "Specifies the node kind (e.g. IRI or literal) each value node."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:NodeKind ;
    ns1:label "rdfs:Resource -- sh:nodeKind --> http://www.w3.org/ns/shacl#NodeKind" ;
    ns1:syntax "RDF_PROPERTY" .

sh:not a rdf:Property ;
    rdfs:label "not"@en ;
    rdfs:comment "Specifies a shape that the value nodes must not conform to."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Shape ;
    ns1:label "rdfs:Resource -- sh:not --> http://www.w3.org/ns/shacl#Shape" ;
    ns1:syntax "RDF_PROPERTY" .

sh:or a rdf:Property ;
    rdfs:label "or"@en ;
    rdfs:comment "Specifies a list of shapes so that the value nodes must conform to at least one of the shapes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List ;
    ns1:label "rdfs:Resource -- sh:or --> http://www.w3.org/1999/02/22-rdf-syntax-ns#List" ;
    ns1:syntax "RDF_PROPERTY" .

sh:pattern a rdf:Property ;
    rdfs:label "pattern"@en ;
    rdfs:comment "Specifies a regular expression pattern that the string representations of the value nodes must match."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:string ;
    ns1:label "rdfs:Resource -- sh:pattern --> http://www.w3.org/2001/XMLSchema#string" ;
    ns1:syntax "RDF_PROPERTY" .

sh:property a rdf:Property ;
    rdfs:label "property"@en ;
    rdfs:comment "Links a shape to its property shapes."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:PropertyShape ;
    ns1:label "http://www.w3.org/ns/shacl#Shape -- sh:property --> http://www.w3.org/ns/shacl#PropertyShape" ;
    ns1:syntax "RDF_PROPERTY" .

sh:qualifiedMaxCount a rdf:Property ;
    rdfs:label "qualified max count"@en ;
    rdfs:comment "The maximum number of value nodes that can conform to the shape."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer ;
    ns1:label "rdfs:Resource -- sh:qualifiedMaxCount --> http://www.w3.org/2001/XMLSchema#integer" ;
    ns1:syntax "RDF_PROPERTY" .

sh:qualifiedMinCount a rdf:Property ;
    rdfs:label "qualified min count"@en ;
    rdfs:comment "The minimum number of value nodes that must conform to the shape."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:integer ;
    ns1:label "rdfs:Resource -- sh:qualifiedMinCount --> http://www.w3.org/2001/XMLSchema#integer" ;
    ns1:syntax "RDF_PROPERTY" .

sh:sparql a rdf:Property ;
    rdfs:label "constraint (in SPARQL)"@en ;
    rdfs:comment "Links a shape with SPARQL constraints."@en ;
    rdfs:domain sh:Shape ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:SPARQLConstraint ;
    ns1:label "http://www.w3.org/ns/shacl#Shape -- sh:sparql --> http://www.w3.org/ns/shacl#SPARQLConstraint" ;
    ns1:syntax "RDF_PROPERTY" .

sh:uniqueLang a rdf:Property ;
    rdfs:label "unique languages"@en ;
    rdfs:comment "Specifies whether all node values must have a unique (or no) language tag."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean ;
    ns1:label "rdfs:Resource -- sh:uniqueLang --> http://www.w3.org/2001/XMLSchema#boolean" ;
    ns1:syntax "RDF_PROPERTY" .

sh:xone a rdf:Property ;
    rdfs:label "exactly one"@en ;
    rdfs:comment "Specifies a list of shapes so that the value nodes must conform to exactly one of the shapes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range rdf:List ;
    ns1:label "rdfs:Resource -- sh:xone --> http://www.w3.org/1999/02/22-rdf-syntax-ns#List" ;
    ns1:syntax "RDF_PROPERTY" .

sh:qualifiedValueShape a rdf:Property ;
    rdfs:label "qualified value shape"@en ;
    rdfs:comment "The shape that a specified number of values must conform to."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range sh:Shape ;
    ns1:label "rdfs:Resource -- sh:qualifiedValueShape --> http://www.w3.org/ns/shacl#Shape" ;
    ns1:syntax "RDF_PROPERTY" .

sh:qualifiedValueShapesDisjoint a rdf:Property ;
    rdfs:label "qualified value shapes disjoint"@en ;
    rdfs:comment "Can be used to mark the qualified value shape to be disjoint with its sibling shapes."@en ;
    rdfs:isDefinedBy sh: ;
    rdfs:range xsd:boolean ;
    ns1:label "rdfs:Resource -- sh:qualifiedValueShapesDisjoint --> http://www.w3.org/2001/XMLSchema#boolean" ;
    ns1:syntax "RDF_PROPERTY" .

sh:Literal a sh:NodeKind ;
    rdfs:label "Literal"@en ;
    rdfs:comment "The node kind of all literals."@en ;
    rdfs:isDefinedBy sh: .

sh:IRI a sh:NodeKind ;
    rdfs:label "IRI"@en ;
    rdfs:comment "The node kind of all IRIs."@en ;
    rdfs:isDefinedBy sh: .

sh: a owl:Ontology ;
    rdfs:label "W3C Shapes Constraint Language (SHACL) Vocabulary"@en ;
    rdfs:comment "This vocabulary defines terms used in SHACL, the W3C Shapes Constraint Language."@en ;
    sh:declare [ sh:namespace "http://www.w3.org/ns/shacl#" ;
            sh:prefix "sh" ] ;
    sh:suggestedShapesGraph <http://www.w3.org/ns/shacl-shacl#> .

